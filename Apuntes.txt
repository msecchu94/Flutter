USER: info@extrados.com.ar
PASS: ExtraDosE2


SECCION 1 CONFIG.

Programas:

    VSCode

    Git

    Postman

    Android Studio

    Mac OSX - XCode

Plugins:

    Awesome Flutter Snippets

    Bracket Pair Colorizer 2

    Dart

    Flutter

    Material Icon Theme

    Paste JSON as Code

    Terminal

Tema que estoy usando:

    Monokai Night

Configuraci√≥n del Bracket Pair Colorizer 2:

"bracket-pair-colorizer-2.colors": [
    "#fafafa",
    "#9F51B6",
    "#F7C244",
    "#F07850",
    "#9CDD29",
    "#C497D4"
],

SECCION 2 DART : 

https://dartpad.dartlang.org/
Inyectar variable (+nombre o $nombre)

Numeros: int-double

Boolean y condiciones:

Lista: List

Map: clase abstracta que recibe dos valores EJ. 

 String propiedad = 'soltero';
  
  Map <String,dynamic> persona = {
    
    'nombre':'maxi',
    'edad':30,
    'soltero':true
    
  };
  
 print(persona);
 print(persona['nombre']);
 print(persona['edad']);
 print(persona[propiedad]);

 persona.addAll({'Empleado':false});
 print(persona);

 FUNCIONES:(fuera de la clase) void main (){
  
String mensaje =  saludar(texto:'hola,' , nombre:'maxi');
print(mensaje);
        }

String saludar({String texto,String nombre}){
  
return '$texto $nombre';
    }

Clases: (metodos)
 
 void main() {

//jamas cambiara la prorpiedad(final)
  final volverine = Heroe(nombre:'Logan',poder:'Regeneracion'); 
  print(volverine.toStrin());

}

class Heroe {
  
  String nombre;
  String poder;
 
  Heroe( { String nombre, String poder}){
    this.nombre=nombre;
    this.poder=poder;
    
  }
  
  String toStrin(){
    
    return '${this.nombre} - ${this.poder}';
  }
}

FORMAS CORTAS DE DEFINIR LAS PROPIEDADES

class Heroe {
  
  String nombre;
  String poder;
 
  Heroe( { this.nombre, this.poder}){
    this.nombre=nombre;
    this.poder=poder;
    
  }
  
  String toString()=> 'nombre:$nombre - poder:$poder}';

  CONSTRUCTORES CON NOMBRE : 

  import 'dart:convert';
void main() {

//   final volverine = Heroe('Logan','Regeneracion'); 
  final rowJson='{"nombre":"Logan","poder":"Regeneracion"}';
  
  final parseJson = json.decode(rowJson);
  
  final volverine =new Heroe.fromJson(parseJson);
  
  print(volverine.nombre);
  print(volverine.poder);
}

class Heroe {
  
  String nombre;
  String poder;
 
  Heroe( { this.nombre,this.poder});

  Heroe.fromJson(Map parseJson){
    
    nombre = parseJson['nombre'];
     poder = parseJson['poder'];
  }
}

GETTERS Y SETTERS : 

_props(las hace privadas)

void main(){
  
  final cuadrado = new Cuadrado();
  
  cuadrado.lado=10;
  
  print(cuadrado);
  print ('area:${cuadrado.area}');
  
}



class Cuadrado{
  
  double _lado;
  double _area;
  
  set lado (double valor ){
    
    if(valor <=0){
      
      throw('el lado no puede se menor o igual a 0');
      
    } 
    _lado = valor;
   
  }
  
  double get area => _lado * _lado;
  
  
   toString () => 'Lado:$_lado'; 
}

CLASES ABSTRACTAS : (abstract class name)



    
